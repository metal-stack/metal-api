syntax = "proto3";

package api.v1;

option go_package = "./api/v1";

service BootService {
    rpc Boot(BootServiceBootRequest) returns (BootServiceBootResponse) {}
    rpc Register(BootServiceRegisterRequest)returns (BootServiceRegisterResponse) {}
    rpc Report(BootServiceReportRequest)returns (BootServiceReportResponse) {}
}

message BootServiceBootRequest {
    string mac = 1;
    string partition_id = 2;
}

message BootServiceBootResponse {
    string  kernel = 1;
    repeated string init_ram_disks = 2;
    optional string cmdline = 3;
}

message BootServiceRegisterRequest {
    string uuid = 1;
	MachineHardware hardware = 2;
    MachineBIOS bios = 3;
    MachineIPMI ipmi = 4;
    repeated string tags = 5;
}

message BootServiceRegisterResponse {
    string uuid = 1;
    string size = 2;
    string partition_id = 3;
    RegisterState register_state = 4;
}

message MachineHardware {
    uint64 memory = 1;
	uint32 cpu_cores = 2 ;
	repeated MachineBlockDevice disks = 3;
    repeated MachineNic nics = 4;
}

message MachineNic {
    string mac = 1;
	string name = 2;
    repeated MachineNic neighbors = 3;
}

message MachineBlockDevice {
    string name = 1;
	uint64 size = 2;
}

message MachineBIOS {
	string version = 1;
	string vendor = 2;
	string date = 3;
}

message MachineIPMI {
	string address = 1;
	string mac = 2;
	string user = 3;
	string password = 4;
	string interface = 5;
	MachineFRU fru = 6;
	string bmc_version = 7;
	string power_state = 8;
}

message MachineFRU {
    optional string chassis_part_number = 1;
	optional string chassis_part_serial = 2;
	optional string board_mfg = 3;
	optional string board_mfg_serial = 4;
	optional string board_part_number = 5;
	optional string product_manufacturer = 6;
	optional string product_part_number = 7;
	optional string product_serial = 8;
}

message BootServiceReportRequest {
    string uuid = 1;
    string console_password = 2;
	string primary_disk = 3;
	string os_partition = 4;
	string initrd = 5;
	string cmdline = 6;
	string kernel = 7;
	string bootloader_id = 8;
    bool success = 9;
    string message = 10;
}
message BootServiceReportResponse {
}

enum RegisterState {
    REGISTER_STATE_UNSPECIFIED = 0;
    REGISTER_STATE_CREATED = 1;
    REGISTER_STATE_UPDATED = 2;
}
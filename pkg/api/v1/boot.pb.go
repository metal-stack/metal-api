// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/v1/boot.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BootServiceDhcpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *BootServiceDhcpRequest) Reset() {
	*x = BootServiceDhcpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceDhcpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceDhcpRequest) ProtoMessage() {}

func (x *BootServiceDhcpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceDhcpRequest.ProtoReflect.Descriptor instead.
func (*BootServiceDhcpRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{0}
}

func (x *BootServiceDhcpRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type BootServiceDhcpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BootServiceDhcpResponse) Reset() {
	*x = BootServiceDhcpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceDhcpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceDhcpResponse) ProtoMessage() {}

func (x *BootServiceDhcpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceDhcpResponse.ProtoReflect.Descriptor instead.
func (*BootServiceDhcpResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{1}
}

type BootServiceBootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac         string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	PartitionId string `protobuf:"bytes,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
}

func (x *BootServiceBootRequest) Reset() {
	*x = BootServiceBootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceBootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceBootRequest) ProtoMessage() {}

func (x *BootServiceBootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceBootRequest.ProtoReflect.Descriptor instead.
func (*BootServiceBootRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{2}
}

func (x *BootServiceBootRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *BootServiceBootRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

type BootServiceBootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kernel       string   `protobuf:"bytes,1,opt,name=kernel,proto3" json:"kernel,omitempty"`
	InitRamDisks []string `protobuf:"bytes,2,rep,name=init_ram_disks,json=initRamDisks,proto3" json:"init_ram_disks,omitempty"`
	Cmdline      *string  `protobuf:"bytes,3,opt,name=cmdline,proto3,oneof" json:"cmdline,omitempty"`
}

func (x *BootServiceBootResponse) Reset() {
	*x = BootServiceBootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceBootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceBootResponse) ProtoMessage() {}

func (x *BootServiceBootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceBootResponse.ProtoReflect.Descriptor instead.
func (*BootServiceBootResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{3}
}

func (x *BootServiceBootResponse) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *BootServiceBootResponse) GetInitRamDisks() []string {
	if x != nil {
		return x.InitRamDisks
	}
	return nil
}

func (x *BootServiceBootResponse) GetCmdline() string {
	if x != nil && x.Cmdline != nil {
		return *x.Cmdline
	}
	return ""
}

type BootServiceRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid               string           `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Hardware           *MachineHardware `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware,omitempty"`
	Bios               *MachineBIOS     `protobuf:"bytes,3,opt,name=bios,proto3" json:"bios,omitempty"`
	Ipmi               *MachineIPMI     `protobuf:"bytes,4,opt,name=ipmi,proto3" json:"ipmi,omitempty"`
	Tags               []string         `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	MetalHammerVersion string           `protobuf:"bytes,6,opt,name=metal_hammer_version,json=metalHammerVersion,proto3" json:"metal_hammer_version,omitempty"`
}

func (x *BootServiceRegisterRequest) Reset() {
	*x = BootServiceRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceRegisterRequest) ProtoMessage() {}

func (x *BootServiceRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceRegisterRequest.ProtoReflect.Descriptor instead.
func (*BootServiceRegisterRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{4}
}

func (x *BootServiceRegisterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceRegisterRequest) GetHardware() *MachineHardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetBios() *MachineBIOS {
	if x != nil {
		return x.Bios
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetIpmi() *MachineIPMI {
	if x != nil {
		return x.Ipmi
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetMetalHammerVersion() string {
	if x != nil {
		return x.MetalHammerVersion
	}
	return ""
}

type BootServiceRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Size        string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	PartitionId string `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
}

func (x *BootServiceRegisterResponse) Reset() {
	*x = BootServiceRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceRegisterResponse) ProtoMessage() {}

func (x *BootServiceRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceRegisterResponse.ProtoReflect.Descriptor instead.
func (*BootServiceRegisterResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{5}
}

func (x *BootServiceRegisterResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceRegisterResponse) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BootServiceRegisterResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

type BootServiceWaitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *BootServiceWaitRequest) Reset() {
	*x = BootServiceWaitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceWaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceWaitRequest) ProtoMessage() {}

func (x *BootServiceWaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceWaitRequest.ProtoReflect.Descriptor instead.
func (*BootServiceWaitRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{6}
}

func (x *BootServiceWaitRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type BootServiceWaitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BootServiceWaitResponse) Reset() {
	*x = BootServiceWaitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceWaitResponse) ProtoMessage() {}

func (x *BootServiceWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceWaitResponse.ProtoReflect.Descriptor instead.
func (*BootServiceWaitResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{7}
}

type MachineHardware struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory   uint64                `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	CpuCores uint32                `protobuf:"varint,2,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	Disks    []*MachineBlockDevice `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	Nics     []*MachineNic         `protobuf:"bytes,4,rep,name=nics,proto3" json:"nics,omitempty"`
}

func (x *MachineHardware) Reset() {
	*x = MachineHardware{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineHardware) ProtoMessage() {}

func (x *MachineHardware) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineHardware.ProtoReflect.Descriptor instead.
func (*MachineHardware) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{8}
}

func (x *MachineHardware) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *MachineHardware) GetCpuCores() uint32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *MachineHardware) GetDisks() []*MachineBlockDevice {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *MachineHardware) GetNics() []*MachineNic {
	if x != nil {
		return x.Nics
	}
	return nil
}

type MachineNic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac        string        `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	Name       string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Neighbors  []*MachineNic `protobuf:"bytes,3,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	Hostname   string        `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Identifier string        `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *MachineNic) Reset() {
	*x = MachineNic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineNic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineNic) ProtoMessage() {}

func (x *MachineNic) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineNic.ProtoReflect.Descriptor instead.
func (*MachineNic) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{9}
}

func (x *MachineNic) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *MachineNic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineNic) GetNeighbors() []*MachineNic {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *MachineNic) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MachineNic) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type MachineBlockDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *MachineBlockDevice) Reset() {
	*x = MachineBlockDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineBlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineBlockDevice) ProtoMessage() {}

func (x *MachineBlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineBlockDevice.ProtoReflect.Descriptor instead.
func (*MachineBlockDevice) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{10}
}

func (x *MachineBlockDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineBlockDevice) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MachineBIOS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Vendor  string `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Date    string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *MachineBIOS) Reset() {
	*x = MachineBIOS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineBIOS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineBIOS) ProtoMessage() {}

func (x *MachineBIOS) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineBIOS.ProtoReflect.Descriptor instead.
func (*MachineBIOS) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{11}
}

func (x *MachineBIOS) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MachineBIOS) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *MachineBIOS) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type MachineIPMI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Mac        string      `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	User       string      `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Password   string      `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Interface  string      `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"`
	Fru        *MachineFRU `protobuf:"bytes,6,opt,name=fru,proto3" json:"fru,omitempty"`
	BmcVersion string      `protobuf:"bytes,7,opt,name=bmc_version,json=bmcVersion,proto3" json:"bmc_version,omitempty"`
	PowerState string      `protobuf:"bytes,8,opt,name=power_state,json=powerState,proto3" json:"power_state,omitempty"`
}

func (x *MachineIPMI) Reset() {
	*x = MachineIPMI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineIPMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineIPMI) ProtoMessage() {}

func (x *MachineIPMI) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineIPMI.ProtoReflect.Descriptor instead.
func (*MachineIPMI) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{12}
}

func (x *MachineIPMI) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MachineIPMI) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *MachineIPMI) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MachineIPMI) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MachineIPMI) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *MachineIPMI) GetFru() *MachineFRU {
	if x != nil {
		return x.Fru
	}
	return nil
}

func (x *MachineIPMI) GetBmcVersion() string {
	if x != nil {
		return x.BmcVersion
	}
	return ""
}

func (x *MachineIPMI) GetPowerState() string {
	if x != nil {
		return x.PowerState
	}
	return ""
}

type MachineFRU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChassisPartNumber   *string `protobuf:"bytes,1,opt,name=chassis_part_number,json=chassisPartNumber,proto3,oneof" json:"chassis_part_number,omitempty"`
	ChassisPartSerial   *string `protobuf:"bytes,2,opt,name=chassis_part_serial,json=chassisPartSerial,proto3,oneof" json:"chassis_part_serial,omitempty"`
	BoardMfg            *string `protobuf:"bytes,3,opt,name=board_mfg,json=boardMfg,proto3,oneof" json:"board_mfg,omitempty"`
	BoardMfgSerial      *string `protobuf:"bytes,4,opt,name=board_mfg_serial,json=boardMfgSerial,proto3,oneof" json:"board_mfg_serial,omitempty"`
	BoardPartNumber     *string `protobuf:"bytes,5,opt,name=board_part_number,json=boardPartNumber,proto3,oneof" json:"board_part_number,omitempty"`
	ProductManufacturer *string `protobuf:"bytes,6,opt,name=product_manufacturer,json=productManufacturer,proto3,oneof" json:"product_manufacturer,omitempty"`
	ProductPartNumber   *string `protobuf:"bytes,7,opt,name=product_part_number,json=productPartNumber,proto3,oneof" json:"product_part_number,omitempty"`
	ProductSerial       *string `protobuf:"bytes,8,opt,name=product_serial,json=productSerial,proto3,oneof" json:"product_serial,omitempty"`
}

func (x *MachineFRU) Reset() {
	*x = MachineFRU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineFRU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineFRU) ProtoMessage() {}

func (x *MachineFRU) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineFRU.ProtoReflect.Descriptor instead.
func (*MachineFRU) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{13}
}

func (x *MachineFRU) GetChassisPartNumber() string {
	if x != nil && x.ChassisPartNumber != nil {
		return *x.ChassisPartNumber
	}
	return ""
}

func (x *MachineFRU) GetChassisPartSerial() string {
	if x != nil && x.ChassisPartSerial != nil {
		return *x.ChassisPartSerial
	}
	return ""
}

func (x *MachineFRU) GetBoardMfg() string {
	if x != nil && x.BoardMfg != nil {
		return *x.BoardMfg
	}
	return ""
}

func (x *MachineFRU) GetBoardMfgSerial() string {
	if x != nil && x.BoardMfgSerial != nil {
		return *x.BoardMfgSerial
	}
	return ""
}

func (x *MachineFRU) GetBoardPartNumber() string {
	if x != nil && x.BoardPartNumber != nil {
		return *x.BoardPartNumber
	}
	return ""
}

func (x *MachineFRU) GetProductManufacturer() string {
	if x != nil && x.ProductManufacturer != nil {
		return *x.ProductManufacturer
	}
	return ""
}

func (x *MachineFRU) GetProductPartNumber() string {
	if x != nil && x.ProductPartNumber != nil {
		return *x.ProductPartNumber
	}
	return ""
}

func (x *MachineFRU) GetProductSerial() string {
	if x != nil && x.ProductSerial != nil {
		return *x.ProductSerial
	}
	return ""
}

type BootServiceReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ConsolePassword string    `protobuf:"bytes,2,opt,name=console_password,json=consolePassword,proto3" json:"console_password,omitempty"`
	BootInfo        *BootInfo `protobuf:"bytes,3,opt,name=boot_info,json=bootInfo,proto3" json:"boot_info,omitempty"`
	Success         bool      `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	Message         string    `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BootServiceReportRequest) Reset() {
	*x = BootServiceReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceReportRequest) ProtoMessage() {}

func (x *BootServiceReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceReportRequest.ProtoReflect.Descriptor instead.
func (*BootServiceReportRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{14}
}

func (x *BootServiceReportRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceReportRequest) GetConsolePassword() string {
	if x != nil {
		return x.ConsolePassword
	}
	return ""
}

func (x *BootServiceReportRequest) GetBootInfo() *BootInfo {
	if x != nil {
		return x.BootInfo
	}
	return nil
}

func (x *BootServiceReportRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BootServiceReportRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BootServiceReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BootServiceReportResponse) Reset() {
	*x = BootServiceReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceReportResponse) ProtoMessage() {}

func (x *BootServiceReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceReportResponse.ProtoReflect.Descriptor instead.
func (*BootServiceReportResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{15}
}

type BootInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId      string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	PrimaryDisk  string `protobuf:"bytes,2,opt,name=primary_disk,json=primaryDisk,proto3" json:"primary_disk,omitempty"`
	OsPartition  string `protobuf:"bytes,3,opt,name=os_partition,json=osPartition,proto3" json:"os_partition,omitempty"`
	Initrd       string `protobuf:"bytes,4,opt,name=initrd,proto3" json:"initrd,omitempty"`
	Cmdline      string `protobuf:"bytes,5,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	Kernel       string `protobuf:"bytes,6,opt,name=kernel,proto3" json:"kernel,omitempty"`
	BootloaderId string `protobuf:"bytes,8,opt,name=bootloader_id,json=bootloaderId,proto3" json:"bootloader_id,omitempty"`
}

func (x *BootInfo) Reset() {
	*x = BootInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootInfo) ProtoMessage() {}

func (x *BootInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootInfo.ProtoReflect.Descriptor instead.
func (*BootInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{16}
}

func (x *BootInfo) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *BootInfo) GetPrimaryDisk() string {
	if x != nil {
		return x.PrimaryDisk
	}
	return ""
}

func (x *BootInfo) GetOsPartition() string {
	if x != nil {
		return x.OsPartition
	}
	return ""
}

func (x *BootInfo) GetInitrd() string {
	if x != nil {
		return x.Initrd
	}
	return ""
}

func (x *BootInfo) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *BootInfo) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *BootInfo) GetBootloaderId() string {
	if x != nil {
		return x.BootloaderId
	}
	return ""
}

type BootServiceAbortReinstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PrimaryDiskWiped bool   `protobuf:"varint,2,opt,name=primary_disk_wiped,json=primaryDiskWiped,proto3" json:"primary_disk_wiped,omitempty"`
}

func (x *BootServiceAbortReinstallRequest) Reset() {
	*x = BootServiceAbortReinstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceAbortReinstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceAbortReinstallRequest) ProtoMessage() {}

func (x *BootServiceAbortReinstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceAbortReinstallRequest.ProtoReflect.Descriptor instead.
func (*BootServiceAbortReinstallRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{17}
}

func (x *BootServiceAbortReinstallRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceAbortReinstallRequest) GetPrimaryDiskWiped() bool {
	if x != nil {
		return x.PrimaryDiskWiped
	}
	return false
}

type BootServiceAbortReinstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootInfo *BootInfo `protobuf:"bytes,1,opt,name=boot_info,json=bootInfo,proto3" json:"boot_info,omitempty"`
}

func (x *BootServiceAbortReinstallResponse) Reset() {
	*x = BootServiceAbortReinstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceAbortReinstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceAbortReinstallResponse) ProtoMessage() {}

func (x *BootServiceAbortReinstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceAbortReinstallResponse.ProtoReflect.Descriptor instead.
func (*BootServiceAbortReinstallResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{18}
}

func (x *BootServiceAbortReinstallResponse) GetBootInfo() *BootInfo {
	if x != nil {
		return x.BootInfo
	}
	return nil
}

type BootServiceSuperUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BootServiceSuperUserPasswordRequest) Reset() {
	*x = BootServiceSuperUserPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceSuperUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceSuperUserPasswordRequest) ProtoMessage() {}

func (x *BootServiceSuperUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceSuperUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*BootServiceSuperUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{19}
}

type BootServiceSuperUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureDisabled   bool   `protobuf:"varint,1,opt,name=feature_disabled,json=featureDisabled,proto3" json:"feature_disabled,omitempty"`
	SuperUserPassword string `protobuf:"bytes,2,opt,name=super_user_password,json=superUserPassword,proto3" json:"super_user_password,omitempty"`
}

func (x *BootServiceSuperUserPasswordResponse) Reset() {
	*x = BootServiceSuperUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_boot_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootServiceSuperUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceSuperUserPasswordResponse) ProtoMessage() {}

func (x *BootServiceSuperUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_boot_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceSuperUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*BootServiceSuperUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_boot_proto_rawDescGZIP(), []int{20}
}

func (x *BootServiceSuperUserPasswordResponse) GetFeatureDisabled() bool {
	if x != nil {
		return x.FeatureDisabled
	}
	return false
}

func (x *BootServiceSuperUserPasswordResponse) GetSuperUserPassword() string {
	if x != nil {
		return x.SuperUserPassword
	}
	return ""
}

var File_api_v1_boot_proto protoreflect.FileDescriptor

var file_api_v1_boot_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x2c, 0x0a, 0x16, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x68, 0x63, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x6f, 0x6f,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x68, 0x63, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x16, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f,
	0x72, 0x61, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x69, 0x74, 0x52, 0x61, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x1d, 0x0a,
	0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x1a, 0x42, 0x6f, 0x6f,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x62, 0x69, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x42,
	0x49, 0x4f, 0x53, 0x52, 0x04, 0x62, 0x69, 0x6f, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x70, 0x6d,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x50, 0x4d, 0x49, 0x52, 0x04, 0x69, 0x70,
	0x6d, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x5f,
	0x68, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x48, 0x61, 0x6d, 0x6d, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x1b, 0x42, 0x6f, 0x6f, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b,
	0x73, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4e, 0x69, 0x63, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0a, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x4e, 0x69, 0x63, 0x52, 0x09, 0x6e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x12,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x53, 0x0a, 0x0b, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x42, 0x49, 0x4f, 0x53, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22,
	0xef, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x50, 0x4d, 0x49, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x66, 0x72, 0x75,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x46, 0x52, 0x55, 0x52, 0x03, 0x66, 0x72, 0x75, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x6d, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6d, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xbe, 0x04, 0x0a, 0x0a, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x46, 0x52, 0x55,
	0x12, 0x33, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x11, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x11, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x50, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x6d, 0x66, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x66, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x66, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d,
	0x66, 0x67, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x13, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x16, 0x0a,
	0x14, 0x5f, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x6d, 0x66, 0x67, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x66,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x18, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2d,
	0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x1b, 0x0a, 0x19, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xda,
	0x01, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x73, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6e, 0x69, 0x74, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e,
	0x69, 0x74, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x20, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x64,
	0x69, 0x73, 0x6b, 0x5f, 0x77, 0x69, 0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x69, 0x73, 0x6b, 0x57, 0x69, 0x70, 0x65,
	0x64, 0x22, 0x52, 0x0a, 0x21, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x6f, 0x6f,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x23, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a,
	0x24, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x32, 0xef, 0x04, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x49, 0x0a, 0x04, 0x44, 0x68, 0x63, 0x70, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x68, 0x63,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x68, 0x63,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x04, 0x42,
	0x6f, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x53, 0x75, 0x70, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x04, 0x57, 0x61, 0x69, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f,
	0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v1_boot_proto_rawDescOnce sync.Once
	file_api_v1_boot_proto_rawDescData = file_api_v1_boot_proto_rawDesc
)

func file_api_v1_boot_proto_rawDescGZIP() []byte {
	file_api_v1_boot_proto_rawDescOnce.Do(func() {
		file_api_v1_boot_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_boot_proto_rawDescData)
	})
	return file_api_v1_boot_proto_rawDescData
}

var file_api_v1_boot_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_v1_boot_proto_goTypes = []interface{}{
	(*BootServiceDhcpRequest)(nil),               // 0: api.v1.BootServiceDhcpRequest
	(*BootServiceDhcpResponse)(nil),              // 1: api.v1.BootServiceDhcpResponse
	(*BootServiceBootRequest)(nil),               // 2: api.v1.BootServiceBootRequest
	(*BootServiceBootResponse)(nil),              // 3: api.v1.BootServiceBootResponse
	(*BootServiceRegisterRequest)(nil),           // 4: api.v1.BootServiceRegisterRequest
	(*BootServiceRegisterResponse)(nil),          // 5: api.v1.BootServiceRegisterResponse
	(*BootServiceWaitRequest)(nil),               // 6: api.v1.BootServiceWaitRequest
	(*BootServiceWaitResponse)(nil),              // 7: api.v1.BootServiceWaitResponse
	(*MachineHardware)(nil),                      // 8: api.v1.MachineHardware
	(*MachineNic)(nil),                           // 9: api.v1.MachineNic
	(*MachineBlockDevice)(nil),                   // 10: api.v1.MachineBlockDevice
	(*MachineBIOS)(nil),                          // 11: api.v1.MachineBIOS
	(*MachineIPMI)(nil),                          // 12: api.v1.MachineIPMI
	(*MachineFRU)(nil),                           // 13: api.v1.MachineFRU
	(*BootServiceReportRequest)(nil),             // 14: api.v1.BootServiceReportRequest
	(*BootServiceReportResponse)(nil),            // 15: api.v1.BootServiceReportResponse
	(*BootInfo)(nil),                             // 16: api.v1.BootInfo
	(*BootServiceAbortReinstallRequest)(nil),     // 17: api.v1.BootServiceAbortReinstallRequest
	(*BootServiceAbortReinstallResponse)(nil),    // 18: api.v1.BootServiceAbortReinstallResponse
	(*BootServiceSuperUserPasswordRequest)(nil),  // 19: api.v1.BootServiceSuperUserPasswordRequest
	(*BootServiceSuperUserPasswordResponse)(nil), // 20: api.v1.BootServiceSuperUserPasswordResponse
}
var file_api_v1_boot_proto_depIdxs = []int32{
	8,  // 0: api.v1.BootServiceRegisterRequest.hardware:type_name -> api.v1.MachineHardware
	11, // 1: api.v1.BootServiceRegisterRequest.bios:type_name -> api.v1.MachineBIOS
	12, // 2: api.v1.BootServiceRegisterRequest.ipmi:type_name -> api.v1.MachineIPMI
	10, // 3: api.v1.MachineHardware.disks:type_name -> api.v1.MachineBlockDevice
	9,  // 4: api.v1.MachineHardware.nics:type_name -> api.v1.MachineNic
	9,  // 5: api.v1.MachineNic.neighbors:type_name -> api.v1.MachineNic
	13, // 6: api.v1.MachineIPMI.fru:type_name -> api.v1.MachineFRU
	16, // 7: api.v1.BootServiceReportRequest.boot_info:type_name -> api.v1.BootInfo
	16, // 8: api.v1.BootServiceAbortReinstallResponse.boot_info:type_name -> api.v1.BootInfo
	0,  // 9: api.v1.BootService.Dhcp:input_type -> api.v1.BootServiceDhcpRequest
	2,  // 10: api.v1.BootService.Boot:input_type -> api.v1.BootServiceBootRequest
	19, // 11: api.v1.BootService.SuperUserPassword:input_type -> api.v1.BootServiceSuperUserPasswordRequest
	4,  // 12: api.v1.BootService.Register:input_type -> api.v1.BootServiceRegisterRequest
	6,  // 13: api.v1.BootService.Wait:input_type -> api.v1.BootServiceWaitRequest
	14, // 14: api.v1.BootService.Report:input_type -> api.v1.BootServiceReportRequest
	17, // 15: api.v1.BootService.AbortReinstall:input_type -> api.v1.BootServiceAbortReinstallRequest
	1,  // 16: api.v1.BootService.Dhcp:output_type -> api.v1.BootServiceDhcpResponse
	3,  // 17: api.v1.BootService.Boot:output_type -> api.v1.BootServiceBootResponse
	20, // 18: api.v1.BootService.SuperUserPassword:output_type -> api.v1.BootServiceSuperUserPasswordResponse
	5,  // 19: api.v1.BootService.Register:output_type -> api.v1.BootServiceRegisterResponse
	7,  // 20: api.v1.BootService.Wait:output_type -> api.v1.BootServiceWaitResponse
	15, // 21: api.v1.BootService.Report:output_type -> api.v1.BootServiceReportResponse
	18, // 22: api.v1.BootService.AbortReinstall:output_type -> api.v1.BootServiceAbortReinstallResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_v1_boot_proto_init() }
func file_api_v1_boot_proto_init() {
	if File_api_v1_boot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_boot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceDhcpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceDhcpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceBootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceBootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceWaitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceWaitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineHardware); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineNic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineBlockDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineBIOS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineIPMI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineFRU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceAbortReinstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceAbortReinstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceSuperUserPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_boot_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootServiceSuperUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_boot_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_api_v1_boot_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_boot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_boot_proto_goTypes,
		DependencyIndexes: file_api_v1_boot_proto_depIdxs,
		MessageInfos:      file_api_v1_boot_proto_msgTypes,
	}.Build()
	File_api_v1_boot_proto = out.File
	file_api_v1_boot_proto_rawDesc = nil
	file_api_v1_boot_proto_goTypes = nil
	file_api_v1_boot_proto_depIdxs = nil
}
